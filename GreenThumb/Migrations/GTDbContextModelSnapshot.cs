// <auto-generated />
using GreenThumb.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenThumb.Migrations
{
    [DbContext(typeof(GTDbContext))]
    partial class GTDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GardenModelPlantModel", b =>
                {
                    b.Property<int>("GardensId")
                        .HasColumnType("int");

                    b.Property<int>("PlantsId")
                        .HasColumnType("int");

                    b.HasKey("GardensId", "PlantsId");

                    b.HasIndex("PlantsId");

                    b.ToTable("GardenModelPlantModel");
                });

            modelBuilder.Entity("GreenThumb.Models.GardenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Gardens");
                });

            modelBuilder.Entity("GreenThumb.Models.InstructionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instruction");

                    b.Property<int>("PlantId")
                        .HasColumnType("int")
                        .HasColumnName("plant_id");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Keep soil consistently moist",
                            PlantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Water moderately, let soil dry between.",
                            PlantId = 2
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Water when top inch is dry.",
                            PlantId = 3
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Water deeply and consistently.",
                            PlantId = 4
                        },
                        new
                        {
                            Id = 5,
                            Instruction = "Keep soil consistently moist.",
                            PlantId = 5
                        },
                        new
                        {
                            Id = 6,
                            Instruction = "Water sparingly, let the medium dry.",
                            PlantId = 6
                        },
                        new
                        {
                            Id = 7,
                            Instruction = "Water moderately, let soil dry.",
                            PlantId = 7
                        },
                        new
                        {
                            Id = 8,
                            Instruction = "Water deeply when top inch is dry",
                            PlantId = 8
                        },
                        new
                        {
                            Id = 9,
                            Instruction = "Water sparingly, let soil dry out.",
                            PlantId = 9
                        },
                        new
                        {
                            Id = 10,
                            Instruction = "Water regularly when young, let soil dry.",
                            PlantId = 10
                        },
                        new
                        {
                            Id = 11,
                            Instruction = "Water sparingly, let soil dry.",
                            PlantId = 11
                        },
                        new
                        {
                            Id = 12,
                            Instruction = "Water sparingly, let soil dry.",
                            PlantId = 12
                        },
                        new
                        {
                            Id = 13,
                            Instruction = "Plant in well-drained soil, with sunlight.",
                            PlantId = 1
                        },
                        new
                        {
                            Id = 14,
                            Instruction = "Plant bulbs in fall, in well-drained soil.",
                            PlantId = 2
                        },
                        new
                        {
                            Id = 15,
                            Instruction = "Plant in spring, in sunny location.",
                            PlantId = 3
                        },
                        new
                        {
                            Id = 16,
                            Instruction = "Plant seeds in spring, in fertile soil.",
                            PlantId = 4
                        },
                        new
                        {
                            Id = 17,
                            Instruction = " Plant bulbs in spring, in partial shade.",
                            PlantId = 5
                        },
                        new
                        {
                            Id = 18,
                            Instruction = "Plant in orchid mix, with good drainage.",
                            PlantId = 6
                        },
                        new
                        {
                            Id = 19,
                            Instruction = "Plant bulbs in fall, in well-drained soil.",
                            PlantId = 7
                        },
                        new
                        {
                            Id = 20,
                            Instruction = "Plant in fertile, well-drained soil.",
                            PlantId = 8
                        },
                        new
                        {
                            Id = 21,
                            Instruction = "Plant in cactus mix, in full sunlight.",
                            PlantId = 9
                        },
                        new
                        {
                            Id = 22,
                            Instruction = " Plant in well-drained soil, in sunlight.",
                            PlantId = 10
                        },
                        new
                        {
                            Id = 23,
                            Instruction = "Plant in well-drained soil, in sunlight.",
                            PlantId = 11
                        },
                        new
                        {
                            Id = 24,
                            Instruction = "Plant in well-drained soil, in sunlight.",
                            PlantId = 12
                        },
                        new
                        {
                            Id = 25,
                            Instruction = "Prune in late winter to encourage new growth.",
                            PlantId = 1
                        },
                        new
                        {
                            Id = 26,
                            Instruction = "Mulch in winter for added insulation.",
                            PlantId = 2
                        },
                        new
                        {
                            Id = 27,
                            Instruction = "Deadhead spent blooms for prolonged flowering.",
                            PlantId = 3
                        },
                        new
                        {
                            Id = 28,
                            Instruction = "Provide support for tall varieties.",
                            PlantId = 4
                        },
                        new
                        {
                            Id = 29,
                            Instruction = "Apply a balanced fertilizer in spring.",
                            PlantId = 5
                        },
                        new
                        {
                            Id = 30,
                            Instruction = "Provide indirect sunlight for optimal growth.",
                            PlantId = 6
                        },
                        new
                        {
                            Id = 31,
                            Instruction = "Allow foliage to yellow before removing.",
                            PlantId = 7
                        },
                        new
                        {
                            Id = 32,
                            Instruction = "Stake heavy blooms to prevent drooping.",
                            PlantId = 8
                        },
                        new
                        {
                            Id = 33,
                            Instruction = "Protect from frost during winter.",
                            PlantId = 9
                        },
                        new
                        {
                            Id = 34,
                            Instruction = "Prune for bushier growth.",
                            PlantId = 10
                        },
                        new
                        {
                            Id = 35,
                            Instruction = "Prune after flowering to maintain shape.",
                            PlantId = 11
                        },
                        new
                        {
                            Id = 36,
                            Instruction = "Pinch back young plants for bushier growth.",
                            PlantId = 12
                        });
                });

            modelBuilder.Entity("GreenThumb.Models.PlantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rose"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tulip"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Daisy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sunflower"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lily"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Orchid"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Daffodil"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Peony"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cactus"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Eucalyptus"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Lavender"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Marigold"
                        });
                });

            modelBuilder.Entity("GreenThumb.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "WIFBZvl1BoXnXPpfLDpOvA==",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("GardenModelPlantModel", b =>
                {
                    b.HasOne("GreenThumb.Models.GardenModel", null)
                        .WithMany()
                        .HasForeignKey("GardensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenThumb.Models.PlantModel", null)
                        .WithMany()
                        .HasForeignKey("PlantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreenThumb.Models.GardenModel", b =>
                {
                    b.HasOne("GreenThumb.Models.UserModel", "User")
                        .WithOne("Garden")
                        .HasForeignKey("GreenThumb.Models.GardenModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenThumb.Models.InstructionModel", b =>
                {
                    b.HasOne("GreenThumb.Models.PlantModel", "Plant")
                        .WithMany("Instructions")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("GreenThumb.Models.PlantModel", b =>
                {
                    b.Navigation("Instructions");
                });

            modelBuilder.Entity("GreenThumb.Models.UserModel", b =>
                {
                    b.Navigation("Garden");
                });
#pragma warning restore 612, 618
        }
    }
}
